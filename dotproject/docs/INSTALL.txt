Installing dotProject on LAMP System

REVISION HISTORY
Original Document:  17 Oct 2002 (dotProject Team)
Revised:            03 - 08 July 2002 (by JRP)
Revised:            30 Aug 2002 (by JRP)
Revised:            28 Feb 2003 (eddieajau)

    
SITUATION
You have access to a functioning LAMP (Linux+Apache+MySQL+PHP) web server.

You also have the ability to create a MySQL database and tables.
    
You've decided to install the open-source project management tool called "dotproject".
    
If you've been running "dotproject" already, you might want to refer to our UPGRADING.txt (to be written) document.

You need to have PHP Version 4.1.x or higher (4.0.x or earlier is NO LONGER SUPPORTED).

You will also need a forth generation browser that supports style sheets and javascript
(IE Version 5.5 or better, Mozilla 1.2, Netscape 7.x, etc)

Apache 2 is considered experimental at present.
Apache 1.3.20+ implementations have been successfully tested on Windows and Linux.


MISSION
Install a new copy of dotproject on a LAMP system.
    

EXECUTION
1) Download the most recent dotproject tarball:
    http://sourceforge.net/projects/dotproject/
        

2) Unpack the tarball in your web root directory:
    tar -zxvf dotproject_*.tar.gz
    [Note: replace the * with the appropriate version.]


3) Database Setup:
    // Customize for your system
    Create a new mysql database called {dotproject}.
    Create a new user called {dotproject}.
    Grant access to user {dotproject} on the {dotproject} database.
    Make sure to record the dotproject user's password, {yourpassword}.

    // Customize to match your db_name, db_user, and db_pass.
    mysql> CREATE DATABASE dotproject;
    mysql> GRANT ALL PRIVILEGES ON dotproject.* 
            TO dotproject@localhost IDENTIFIED BY
            "yourpassword" WITH GRANT OPTION;


4) Customize your Database Schema Script [OPTIONAL]
    Open the file dotproject/db/dotproject.sql with a text editor
    and edit the last section where the default dotproject Admin
    Account is setup (line 352).
    
    We recommend that you specify a new admin username, password, 
    and email. Save your changes. [Alternatively, this step can 
    be completed in the "User Admin" section of dotproject after
    installation].


5) Populate Database:
    Utilize the information from the Database Setup and the provided
    "/db/dotproject.sql" script to populate the dotproject database.
    
    #mysql -udotproject -pyourpassword dotproject < dotproject/db/dotproject.sql 

    
6) Configuration File Customization:
    Follow the instructions at the top of the file:
    "dotproject/includes/config-dist.php"

6.5) TRANSITIONING for 023
    I'm having problems with "db_connection.php", or
    you will get a blank screen when first hitting the index.php login screen.

7) NEW SECURITY HARDENING:
    With the implementation of dotproject 0.2.3, we have added a new security enhancement feature: 
    "config.php" now requires inclusion of the path to "secret.php".
    
    "secret.php" is located inside of the "includes" directory by default but should be moved OUTSIDE of your webroot.  Then, in "config.php" specify this path.
    
    For example, if your dotproject website was located at:
    
    /home/user/public_html/dotproject
    
    You might want to create a special folder called "private" outside of the webroot. This directory MUST have execute permission for the "other" group (e.g. 711), and the file must also be executable.
    You could
    place secret.php in this folder and reference it as follows from "config.php":
    
    require "/home/user/private/secret.php";
    
    The default secret password inside "secret.php" should also be changed. To do this simply edit
    "secret.php" and make it different than the default $secret variable:
    
    <?php $secret='tHeSeCrEtPaSsWoRd'; ?>
    
    

8) Point your browser to http://yourdomain.com/dotproject/index.php.  If 
        all is well, you should see a login page. 
        Username: admin
        Password: passwd

8) Admin Password and Adding Other Users
    Click on the "User Admin" button and change the admin password as soon as 
    possible (if not completed in step four above). You may also add other users
    with differing levels of access to your dotproject database.
    
    If you would like to provide an alternative email address for the login 
    screen's "Help! I've forgotten my username and password" mailto link, edit line 
    56 (or thereabouts) of /includes/login.php.  The default entry is:
        <?php echo 'admin@' . $site_domain;?>
    
    
9) File Management Configuration
    The File Management Module provides users with an opportunity to upload and
    share files. Several steps are necessary to make sure this module works 
    correctly.
    a) It is very important that the $root_dir variable is set correctly in 
        "includes/config.php". $root_dir must provide the full path to the 
        dotproject installation AND INCLUDE the installation folder name.
        
        $root_dir = "/var/www/html/dotproject";     // Example ONE
        $root_dir = "/wwwroot/dotproject";          // Example TWO

    b) File Folder Permissions
        In order for the file upload to function, you will need to provide full
        read-write-execute priviledges to the file upload folder.  The "default" 
        file upload folder is named "files" and contains an "htaccess" file to 
        prevent unauthorized access.
        
        Navigate to dotproject root directory
        # chmod -R 777 files
        
    c) Troubleshooting
        Failure to specify the proper $root_dir OR failure to provide full 
        read-write-execute permission on the file upload folder will result in 
        numerous error messages along the lines of:
       
        Warning: Unable to create '{$root_dir}/files/0/{rnd #}': 
            Permission denied in {$root_dir}/dosql/addfile.php on line 17
        Warning: Unable to move '/tmp/phpt9SeKp' to '{$root_dir}/files/0/{rnd #}'
            in {$root_dir}/dosql/addfile.php on line 17
        Warning: fopen("{$root_dir}/files/0/{rnd #}","r") - No such file 
            or directory in {$root_dir}/dosql/addfile.php on line 51
        Warning: Supplied argument is not a valid File-Handle resource in
            {$root_dir}/addfile.php on line 52
        Warning: Cannot add header information - headers already sent by (output 
            started at {$root_dir}/dosql/addfile.php:17) in 
            {$root_dir}/dosql/addfile.php on line 92

        Even though you may encounter error messages, there will still be an entry
        made for the various files. However, the contents of the uploaded files will
        likely be lost. Instead the "files" will contain error messages that may help
        with troubleshooting.
        
        If you find that you are accumulating "file" listings, but your contents of the 
        "files" folder is not changing, then you have probably provided an incorrect
        $root_dir path.

    d) Improving Security
        The default "files" folder contains an ".htaccess" file containing the following:
            Options -All
            deny from all 
        
        While this provides basic security, the paranoid can improve security further by:
            i) Changing the name of the "files" folder to something less obvious.
            ii) Moving the "files" folder outside of the webroot
            iii) Both
            
            These security improvements will require technical skill, and will make 
            "upgrading" to future versions of dotproject more challenging.  Basically, 
            you will need to customize the path references for uploading and viewing
            in /dosql/addfile.php and /dosql/delfile.php.
            
---------------------------------------------------------------------------
Web trouble ticket email gateway: dotproject/includes/gateway.pl
---------------------------------------------------------------------------
(from the ticketsmith installation)

1.  Have a working perl install, with DBI and the DBD::MySQL bundles installed
2.  Be sure to protect the gateway.pl file.  You basically need to do one 
    of two things, either move it out of a web-accessible place or somehow 
    protect it from being accessed over the web:
    
            <Files "gateway.pl">
                    order deny,allow
                    deny from all
            </Files>
    
    If you don't protect it, one of two things will happen,  either users will be
    able to see the source and thus grab your Ticketsmith MySQL password, or
    something unpredictable will happen when Apache tries  to run it as a CGI
    script.  I don't think this could be harmful, but hey,  you never know.



7.  Edit the top of gateway.pl to fit your setup.


    
9.  Configure your MDA or MTA to pipe mail for your support list to gateway.pl.  For
    example,  here is a sample procmail recipe:

            :0
            * (^To:|^CC:|^Cc:) .*support@foo.bar
            |/path/to/gateway.pl

    You can also set Ticketsmith up directly with sendmail in /etc/aliases: 

            support: "|/path/to/gateway.pl"

    Keep in mind that with sendmail you need to either put gateway.pl in 
    /etc/smrsh or at least symlink to it from that directory so that 
    sendmail will execute it.  If you do this, you'll have to point 
    the /etc/aliases entry to the copy in /etc/smrsh.