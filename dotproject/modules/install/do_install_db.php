<?php // $Id$
global $db, $dbc;

$dbhost = trim( dPgetParam( $_POST, 'dbhost', '' ) );
$dbname = trim( dPgetParam( $_POST, 'dbname', '' ) );
$dbuser = trim( dPgetParam( $_POST, 'dbuser', '' ) );
$dbpass = trim( dPgetParam( $_POST, 'dbpass', '' ) );
$dbport = trim( dPgetParam( $_POST, 'dbport', '' ) );
$dbdrop = trim( dPgetParam( $_POST, 'dbdrop', false ) );
//$dbpersist = trim( dPgetParam( $_POST, 'dbpersist', false ) );

//convert values of null to 'false'
$dbdrop = defVal($dbdrop, "false");
$dbpersist = defVal($dbpersist, "false");

include_once("./includes/db_connect.php");

$dPconfig['dbtype'] = $dbtype;
include_once("./includes/db_adodb.php");

if(!empty($db)) {
	if ($dbpersist) {
		$dbc = $db->PConnect($this->cfg['dbost'],$this->cfg['dbuser'],$this->cfg['dbpass'],$this->cfg['dbname']);
	} else {
		$dbc = $db->Connect($this->cfg['dbost'],$this->cfg['dbuser'],$this->cfg['dbpass'],$this->cfg['dbname']);
	}
} else { $dbc = false; }

if ($do_db || $do_db_cfg) {

	if ($dbdrop) { db_exec("DROP DATABASE IF EXISTS ".$Installer->cfg['dbname']); }

	db_exec("CREATE DATABASE ".$dbname);
        $dbError = db_errno();

        if ($dbError <> 0 && $dbError <> 1007) {
                //provide some error info
                $AppUI->setMsg( "A Database Error occurred. Database has not been created! The provided database details are probably not correct.\n".db_error(), UI_MSG_ERROR);
                $AppUI->redirect("m=install&tab=$tab");
        }

        //$Installer->dbCreated = true;

        $Installer->populateDB();
        if ($dbError <> 0 && $dbError <> 1007) {
                //provide some error info
                $AppUI->setMsg( "A Database Error occurred. Database has probably not been populated completely!\n".db_error(), UI_MSG_ERROR);
                $AppUI->redirect("m=install&tab=$tab");
        }

        //$Installer->dbPopulated = true;
        //$AppUI->setMsg( "Database successfully created and populated with structure!", UI_MSG_OK);
	$msg = "Database successfully setup ";
}
if ($do_cfg || $do_db_cfg){

	$config = "<?php \n";
	$config .= "### Copyright (c) 2004, The dotProject Development Team dotproject.net and sf.net/projects/dotproject ###\n";
	$config .= "### All rights reserved. Released under BSD License. For further Information see ./includes/config-dist.php ###\n";
	$config .= "\n";
	$config .= "### CONFIGURATION FILE AUTOMATICALLY GENERATED BY THE DOTPROJECT INSTALLER ###\n";
	$config .= "### FOR INFORMATION ON MANUAL CONFIGURATION AND FOR DOCUMENTATION SEE ./includes/config-dist.php ###\n";
	$config .= "\n";
	$config .= "\$dPconfig['dbtype'] = \"$dbtype\";\n";
	$config .= "\$dPconfig['dbhost'] = \"$dbhost\";\n";
	$config .= "\$dPconfig['dbuser'] = \"$dbuser\";\n";
	$config .= "\$dPconfig['dbpass'] = \"$dbpass\";\n";
	$config .= "\$dPconfig['dbport'] = \"$dbport\";\n";
	$config .= "\$dPconfig['dbpersist'] = $dbpersist;\n";
	$config .= "?>";
	$config = trim($config);

	if (is_writable("./includes/config.php") && ($fp = fopen("./includes/config.php", "w"))) {
		fputs( $fp, $config, strlen( $config ) );
		fclose( $fp );
		$msg .= $do_db_cfg ? 'and' : '';
		$AppUI->setMsg( $msg." config file written", UI_MSG_OK);
	} else {
		$msg .= $do_db_cfg ? 'but' : '';
		$AppUI->setMsg( $msg." config file could not be written", UI_MSG_ERROR);
	}

} else {
	$AppUI->setMsg( $msg, UI_MSG_OK);
}

if ($dobackup){

	if( $dbc ) {
		require_once( "$baseDir/lib/adodb/adodb-xmlschema.inc.php" );

		$schema = new adoSchema( $db );

		$sql = $schema->ExtractSchema($content);

		header('Content-Disposition: attachment; filename="dPdbBackup'.date("Ymd").date("His").'.xml"');
		header('Content-Type: text/xml');
		echo $sql;
	} else {
		$AppUI->setMsg( "No Database Connection", UI_MSG_ERROR);
	}


}

if (!$dobackup) {
	$AppUI->redirect("m=install&tab=$tab");
}

?>
